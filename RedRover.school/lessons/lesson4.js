// ========================== While loop ==========================
// let i = 0
// while (i<3){                 // до тех пор пока i<3
//     console.log(i);          // console.log выводит i
//     i++                      //  шаг +1
// }
// ----------------------------- Выводит i от последнего к первому в столбик -----------------------------------
// let i = 7                         // 7 6 5 4 3 2 1 0
// while (i!=0){
//     console.log(i);
//     i --
// }
// ----------------------------- Выводит элементы массива ('apple', 'pears', 'plums', 'grape')-----------------------------------
// const fruits = ['apple', 'pears', 'plums', 'grape']
// let i = 0
// while (i<fruits.length){
//     console.log(fruits[i]);
//     i++
// }
// ----------------------------- Do - обрабатывает как минимум 1 раз -------------------------------------------------------
// let k = 0
// // do{
// //     console.log(k);
// //     k++
// // }
// // while (k<3)
// //  ------------------------------------------------------------------------------------
// if (k < 3){
//     console.log('if'+k);
// }    
// else console.log('Do something')
// ================================ break ; continue ================================
// Директива break => полностью прекращает выполнение цикла
// continue => прерывает текущую итерацию цикла и продолжает выполнение цикла 
// со следующей итерацией
// for (let i = 0; i<= 10; i++){
//     if (i == 7) break;
//     console.log(i)
// }
// // ---------------------------------------------------------------------------------
// for (let i = 0; i<= 10; i++){             //каждое четное число пропускает
//     if (i%2==0) continue                  //выводит только НЕЧЕТНОЕ
//     console.log(i)
// }
// ------------- Нельзя использовать break / continue справа от оператора " ? "
// ------------- в тернарном операторе (Ternary operator) -----------------------------
// sintax:
// условие ? выражение 1 : выражение 2

// ======================================= FOR IN ===========================================
/* for (key in object){
    code bloke to be executed    // код, который нужно выполнить
}
*/
// const numbers = [45, 4, 9, 16, 25]
// let txt = " ";
// for (let el in numbers ){
//     txt += numbers[el]
// }
// console.log (txt)
//  In подразумевает бежать по КАЖДОМУ элементу массива ОТ НАЧАЛА ДО КОНЦА 
// т.е. for (let el in str) то же, что и
//          (let i=0; i< str.length; i ++)

// =======================================  FOR OF ===========================================
//  Работает(выводит) только элементы, код получается еще короче, чем с  IN
// const cars = ["BMV", "Volvo", "Opel"]
// let text = ""
// for (let x of cars){
//     text += x
//     console.log(x)
// }

// ===================================== Inner loops ========================================
//  --------------------------------- вложенные циклы ---------------------------------------
// 1                              // line == 1
// 12                             // line == 2
// 123                            // line == 3
// 1234                           // line == 4
// 12345                          // line == 5

// console.log (1) 
// console.log (1) 
// console.log (1) 
// console.log (1) 
// console.log (1) 

for (let line = 1; line <= 5; line ++){                                                       // в длину
    let str = "";
    for (let numInLine = 1; numInLine <= line; numInLine ++){                   // в ширину
        str += numInLine
    }
    console.log(str)
}
// // ================================= Как доставать элементы из вложенного массива  ==============================
// let arr = [1, ['a', 'b', [5, 7]], 3, 'Herro ok']
// //         0   -----------------  2       3
// //                     1
// //                       ------
// //              0     1    2
// //                        0  1
// // console.log(typeof arr[3])
// // let str  =
//      console.log(arr[1][2][1])
//         console.log(arr[3][2])

// =============================== как проверить пустой массив ================================
// let arr2 = [1, 3]
// console.log(typeof arr2)

// ===========================================================================================
// ===========================================================================================
